//a  - FUNCIONA
CALL{MATCH (i:INDIVIDUAL)-[v:VIU]->()
    WHERE v.Location="SFLL" AND v.Year IS NOT NULL
    WITH v.Year as Year, 
        size(collect(i)) AS Habitants, 
        collect(DISTINCT i.surname) + collect(DISTINCT i.second_surname) AS CognomsRepetits UNWIND CognomsRepetits as Surnames 
    RETURN Year, Habitants, collect(DISTINCT Surnames) as Cognoms
    ORDER BY Year
}
WITH Year, Habitants, [cognom in Cognoms WHERE cognom <> "nan"] as CognomsFiltrats
RETURN Year, Habitants, CognomsFiltrats


//b
CALL{CALL db.index.fulltext.queryNodes('IndividuNomCognoms', 'miguel estape bofill')
    YIELD node, score
    RETURN node
    LIMIT 1
} 
WITH node
MATCH (i2)<-[s1:SAME_AS]-(i:INDIVIDUAL)-[s2:SAME_AS]->(i3)
WHERE i.name=node.name AND i.surname=node.surname AND i.second_surname=node.second_surname
RETURN i, i2, i3

//c - FUNCIONA
CALL{
    CALL db.index.fulltext.queryNodes('IndividuNomCognoms', 'benito julivert')
    YIELD node, score
    WITH node, score
    ORDER BY score DESC
    RETURN node
    LIMIT 1
} 
WITH node
MATCH (n:INDIVIDUAL)-[f:FAMILIA]-(m:INDIVIDUAL) 
WHERE n = node AND f.Relacio IN ["hija", "hijo"]
RETURN m.name, m.surname, m.second_surname, f.Relacio
ORDER BY m.name

//d

//e
//lista donde cada línia es un año, una calle y el nº habitantes
MATCH (i:INDIVIDUAL)-[v:VIU]->(h:HABITATGES)
WHERE v.Location="SFLL" 
RETURN v.Year as Any_Padro, h.Carrer as Carrer, count(i) as N_habitants
ORDER BY Any_Padro, N_habitants

// cada línea es un año donde se guarda una lista de diccionarios. cada dict tiene el nombre de la calle y el nº habitantes
CALL{
    MATCH (i:INDIVIDUAL)-[v:VIU]->(h:HABITATGES)
    WHERE v.Location="SFLL" 
    RETURN v.Year as Any_Padro, h.Carrer as Carrer, count(i) as Habitants
}
WITH Any_Padro, collect({carrer: Carrer, habitants: Habitants}) as Carrer_Habitants
RETURN Any_Padro, Carrer_Habitants

//guardar por si acaso
CALL{
    WITH Any_Padro, min(Carrer_Habitants.habitants) as min_hab
    RETURN Any_Padro, min_hab
}
RETURN Any_Padro, min_hab
